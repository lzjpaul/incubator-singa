name: "deep-big-simple-dbm"
train_steps: 10000
display_frequency:30
updater{
  base_learning_rate: 0.01
  learning_rate_change_method: kStep
  learning_rate_change_frequency: 60
  gamma: 0.997
  param_type: "Param"
}

neuralnet {
layer {
  name: "data"
  type: "kShardData"
  data_param {
    path: "examples/mnistDBM/mnist_train_lmdb"
    batchsize: 1000
  }
  exclude: kTest
}


layer{
  name:"mnist"
  type: "kMnistImage"
  srclayers: "data"
  mnist_param {
#    sigma: 6
#    alpha: 38
#    gamma: 15
#    kernel: 21
#    elastic_freq:100
#    beta:15
#    resize: 29
    norm_a: 127.5
    norm_b: 1
  }
}


#layer{
#  name: "label"
#  type: "kLabel"
#  srclayers: "data"
#}



layer{
  name: "DBMBottom"
  type: "kDBMBottomLayer"
  srclayers:"mnist"
  dbm_bottom_param{
    num_output: 1000
  }
  param{
    name: "weight"
    init_method: kUniform
    low:-0.05
    high:0.05
  }
  param{
    name: "bias"
    init_method: kUniform
    low: -0.05
    high:0.05
  }
}


layer{
  name: "DBMMiddle1"
  type: "kDBMMiddleLayer"
  srclayers:"DBMBottom"
  dbm_middle_param{
    num_output: 1000
  }
  param{
    name: "weight"
    init_method: kUniform
    low:-0.05
    high:0.05
  }
  param{
    name: "bias"
    init_method: kUniform
    low: -0.05
    high:0.05
  }
}

layer{
  name: "DBMMiddle2"
  type: "kDBMMiddleLayer"
  srclayers:"DBMMiddle1"
  dbm_middle_param{
    num_output: 1000
  }
  param{
    name: "weight"
    init_method: kUniform
    low:-0.05
    high:0.05
  }
  param{
    name: "bias"
    init_method: kUniform
    low: -0.05
    high:0.05
  }
}

layer{
  name: "DBMTop"
  type: "kDBMTopLayer"
  srclayers:"DBMMiddle2"
  param{
    name: "bias"
    init_method: kUniform
    low: -0.05
    high:0.05
  }
}

}
