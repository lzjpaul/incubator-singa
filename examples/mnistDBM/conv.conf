name: "mnist-conv"
train_steps: 10000
test_steps:100
test_frequency:500
display_frequency:50
debug: false
updater{
  base_learning_rate:0.01
  momentum:0.9
  weight_decay:0.0005
  gamma:0.0001
  pow:0.75
  learning_rate_change_method:kInverse
}
neuralnet {
layer {
  name: "data"
  type: "kLMDBData"
  data_param {
    path: "/home/wangwei/program/singa/examples/mnist/mnist_train_lmdb"
    batchsize: 64
  }
  exclude: kTest
}

layer {
  name: "data"
  type: "kLMDBData"
  data_param {
    path: "/home/wangwei/program/singa/examples/mnist/mnist_test_lmdb"
    batchsize: 100
  }
  exclude: kTrain
}

layer{
  name:"mnist"
  type: "kMnistImage"
  srclayers: "data"
  mnist_param {
#    sigma: 6
#    alpha: 38
#    gamma: 15
#    kernel: 21
#    elastic_freq:100
#    beta:15
#    resize: 29
    norm_a:255
  }
}


layer{
  name: "label"
  type: "kLabel"
  srclayers: "data"
}
layer {
  name: "conv1"
  type: "kConvolution"
  srclayers: "mnist"
  convolution_param {
    num_filters: 20
    kernel: 5
    stride: 1
  }
  param{
      name: "weight"
      init_method:kUniformSqrtFanIn
      learning_rate_multiplier:1.0
    }
  param{
      name: "bias"
      init_method: kConstant
      learning_rate_multiplier:2.0
      value:0
    }
}
layer {
  name: "pool1"
  type: "kPooling"
  srclayers: "conv1"
  pooling_param {
    pool: MAX
    kernel: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "kConvolution"
  srclayers: "pool1"
  convolution_param {
    num_filters: 50
    kernel: 5
    stride: 1
  }
  param{
      name: "weight"
      init_method:kUniformSqrtFanIn
      learning_rate_multiplier:1.0
    }
  param{
      name: "bias"
      init_method: kConstant
      learning_rate_multiplier:2.0
      value:0
    }
}
layer {
  name: "pool2"
  type: "kPooling"
  srclayers: "conv2"
  pooling_param {
    pool: MAX
    kernel: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "kInnerProduct"
  srclayers:"pool2"
  inner_product_param {
    num_output: 500
  }
  param{
      name: "weight"
      init_method:kUniformSqrtFanIn
      learning_rate_multiplier:1.0
    }
  param{
      name: "bias"
      init_method: kConstant
      learning_rate_multiplier:2.0
      value:0
  }

}

layer {
  name: "relu1"
  type: "kReLU"
  srclayers:"ip1"
}

layer {
  name: "ip2"
  type: "kInnerProduct"
  srclayers:"relu1"
  inner_product_param {
    num_output: 10
  }
  param{
      name: "weight"
      init_method:kUniformSqrtFanIn
      learning_rate_multiplier:1
    }
  param{
      name: "bias"
      init_method: kConstant
      learning_rate_multiplier:2
      value:0
    }
}
layer{
  name: "loss"
  type:"kSoftmaxLoss"
  softmaxloss_param{
    topk:1
  }
  srclayers:"ip2"
  srclayers:"label"
}
}
