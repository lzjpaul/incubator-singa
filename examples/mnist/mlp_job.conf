cluster {
  nworker_groups: 1
  nserver_groups: 1
}
model {
  name: "deep-big-simple-mlp"
  train_steps: 1000
  test_steps:10
  test_frequency:60
  display_frequency:30
  alg: kBackPropagation
  updater{
    base_lr: 0.001
    lr_change: kStep
    type: kSGD
    step_conf{
      change_freq: 60
      gamma: 0.997
    }
  }

  neuralnet {
  layer {
    name: "data"
    type: kShardData
    sharddata_conf {
      path: "examples/mnist/mnist_train_shard"
      batchsize: 1000
    }
    exclude: kTest
  }

  layer {
    name: "data"
    type: kShardData
    sharddata_conf {
      path: "examples/mnist/mnist_test_shard"
      batchsize: 1000
    }
    exclude: kTrain
  }

  layer{
    name:"mnist"
    type: kMnist
    srclayers: "data"
    mnist_conf {
#    sigma: 6
#    alpha: 38
#    gamma: 15
#    kernel: 21
#    elastic_freq:100
#    beta:15
#    resize: 29
      norm_a: 127.5
      norm_b: 1
    }
  }


  layer{
    name: "label"
    type: kLabel
    srclayers: "data"
  }

  layer{
    name: "fc1"
    type: kInnerProduct
    srclayers:"mnist"
    innerproduct_conf{
      num_output: 2500
    }
    param{
      name: "w1"
      init_method: kUniform
      low:-0.05
      high:0.05
    }
    param{
      name: "b1"
      init_method: kUniform
      low: -0.05
      high:0.05
    }
  }

  layer{
    name: "tanh1"
    type: kTanh
    srclayers:"fc1"
  }
  layer{
    name: "fc2"
    type: kInnerProduct
    srclayers:"tanh1"
    innerproduct_conf{
      num_output: 2000
    }
    param{
      name: "w2"
      init_method: kUniform
      low:-0.05
      high:0.05
    }
    param{
      name: "b2"
      init_method: kUniform
      low: -0.05
      high:0.05
    }
  }

  layer{
    name: "tanh2"
    type: kTanh
    srclayers:"fc2"
  }
  layer{
    name: "fc3"
    type:  kInnerProduct
    srclayers:"tanh2"
    innerproduct_conf{
      num_output: 1500
    }
    param{
      name: "w3"
      init_method: kUniform
      low:-0.05
      high:0.05
    }
    param{
      name: "b3"
      init_method: kUniform
      low: -0.05
      high:0.05
    }

  }

  layer{
    name: "tanh3"
    type: kTanh
    srclayers:"fc3"
  }
  layer{
    name: "fc4"
    type: kInnerProduct
    srclayers:"tanh3"
    innerproduct_conf{
      num_output: 1000
    }
    param{
      name: "w4"
      init_method: kUniform
      low:-0.05
      high:0.05
    }
    param{
      name: "b4"
      init_method: kUniform
      low: -0.05
      high:0.05
    }

  }

  layer{
    name: "tanh4"
    type: kTanh
    srclayers:"fc4"
  }
  layer{
    name: "fc5"
    type: kInnerProduct
    srclayers:"tanh4"
    innerproduct_conf{
      num_output: 500
    }
    param{
      name: "w5"
      init_method: kUniform
      low:-0.05
      high:0.05
    }
    param{
      name: "b5"
      init_method: kUniform
      low: -0.05
      high:0.05
    }

  }

  layer{
    name: "tanh5"
    type: kTanh
    srclayers:"fc5"
  }
  layer{
    name: "fc6"
    type: kInnerProduct
    srclayers:"tanh5"
    innerproduct_conf{
      num_output: 10
    }
    param{
      name: "w6"
      init_method: kUniform
      low:-0.05
      high:0.05
    }
    param{
      name: "b6"
      init_method: kUniform
      low: -0.05
      high:0.05
    }
  }
  layer{
    name: "loss"
    type:kSoftmaxLoss
    softmaxloss_conf{
      topk:1
    }
    srclayers:"fc6"
    srclayers:"label"
  }
}
}
